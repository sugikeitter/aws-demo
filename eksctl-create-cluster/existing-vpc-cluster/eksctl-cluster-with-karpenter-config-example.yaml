# ref https://karpenter.sh/docs/getting-started/getting-started-with-karpenter/
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: existing-vpc-cluster
  region: ap-northeast-1
  tags:
    karpenter.sh/discovery: ${EKS_CLUSTER_NAME}
accessConfig:
  authenticationMode: API
  accessEntries:
    - principalARN: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/KarpenterNodeRole-${EKS_CLUSTER_NAME}"
      type: EC2_LINUX # Add system:nodes in kubernetesGroups by default
      # ↑ Is system:bootstrappers nessesary?
iam:
  withOIDC: true
  podIdentityAssociations:
  - namespace: kube-system
    serviceAccountName: karpenter
    roleName: ${EKS_CLUSTER_NAME}-karpenter
    permissionPolicyARNs:
    - arn:aws:iam::${AWS_ACCOUNT_ID}:policy/KarpenterControllerPolicy-${EKS_CLUSTER_NAME}
    # TODO or ↓ (https://docs.aws.amazon.com/eks/latest/userguide/pod-id-association.html)
    # cat > trust-relationship.json <<EOF
    # {
    #     "Version": "2012-10-17",
    #     "Statement": [
    #         {
    #             "Sid": "AllowEksAuthToAssumeRoleForPodIdentity",
    #             "Effect": "Allow",
    #             "Principal": {
    #                 "Service": "pods.eks.amazonaws.com"
    #             },
    #             "Action": [
    #                 "sts:AssumeRole",
    #                 "sts:TagSession"
    #             ]
    #         }
    #     ]
    # }
    # EOF
    # aws iam create-role --role-name karpentar-role --assume-role-policy-document file://trust-relationship.json --description "karpentar-role"
    # aws iam attach-role-policy --role-name karpentar-role --policy-arn=arn:aws:iam::${AWS_ACCOUNT_ID}:policy/KarpenterControllerPolicy-${EKS_CLUSTER_NAME}
    # aws eks create-pod-identity-association --cluster-name ${EKS_CLUSTER_NAME} --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/karpentar-role --namespace kube-system --service-account karpenter

# iamIdentityMappings: # will be added to the aws-auth configmap
# - arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/KarpenterNodeRole-${EKS_CLUSTER_NAME}"
#   username: system:node:{{EC2PrivateDNSName}}
#   groups:
#   - system:bootstrappers
#   - system:nodes
  # TODO or `aws eks create-access-entry --cluster-name ${EKS_CLUSTER_NAME} --principal-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/KarpenterNodeRole-${EKS_CLUSTER_NAME} --type EC2_LINUX` # Add system:nodes in kubernetesGroups by default
  # ↑ Is system:bootstrappers nessesary?
addons:
  - name: vpc-cni
  - name: coredns
  - name: kube-proxy
  - name: eks-pod-identity-agent # not default addon
vpc:
  subnets:
    private:
      ap-northeast-1a: { id: ${PRIVATE_IPV6_SUBNET_ID_A} }
      ap-northeast-1c: { id: ${PRIVATE_IPV6_SUBNET_ID_C} }
      ap-northeast-1d: { id: ${PRIVATE_IPV6_SUBNET_ID_D} }
managedNodeGroups:
  - name: default
    amiFamily: Bottlerocket
    spot: true
    instanceTypes:
    - m5.large
    - m5a.large
    - m6a.large
    - m6i.large
    - m7a.large
    - m7i.large
    desiredCapacity: 2
    minSize: 0
    maxSize: 6
    privateNetworking: true