AWSTemplateFormatVersion: '2010-09-09'
Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              Iops: 3000
              Throughput: 125
              VolumeSize: 80
              VolumeType: gp3
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: required
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: eks-demo-default-Node
              - Key: env
                Value: eks-demo
              - Key: karpenter.sh/discovery
                Value: eks-demo
              - Key: alpha.eksctl.io/nodegroup-name
                Value: default
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
              - Key: created-by
                Value: eks-demo
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: eks-demo-default-Node
              - Key: env
                Value: eks-demo
              - Key: karpenter.sh/discovery
                Value: eks-demo
              - Key: alpha.eksctl.io/nodegroup-name
                Value: default
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
              - Key: created-by
                Value: eks-demo
          - ResourceType: network-interface
            Tags:
              - Key: Name
                Value: eks-demo-default-Node
              - Key: env
                Value: eks-demo
              - Key: karpenter.sh/discovery
                Value: eks-demo
              - Key: alpha.eksctl.io/nodegroup-name
                Value: default
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
              - Key: created-by
                Value: eks-demo
      LaunchTemplateName: !Sub ${AWS::StackName}
  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !FindInMap
                  - ServicePrincipalPartitionMap
                  - !Ref AWS::Partition
                  - EC2
        Version: '2012-10-17'
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}/NodeInstanceRole
